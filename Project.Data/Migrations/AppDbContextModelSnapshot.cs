// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data.Context;

#nullable disable

namespace Project.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Data.Entities.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DistrictId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("StoreId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Project.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("30144a78-fa5f-45d8-9dbc-eb595667add7"),
                            ConcurrencyStamp = "8f0b553f-bc81-42d5-a1ca-7cf5cac3097d",
                            Name = "Superadmin",
                            NormalizedName = "SUPERADMIN"
                        },
                        new
                        {
                            Id = new Guid("70d5392a-4f59-41c5-9dd0-1e026005f59c"),
                            ConcurrencyStamp = "c094893f-6f26-44af-935a-07300af888e5",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("17faf120-51a9-4917-bd6a-e43d60b2e910"),
                            ConcurrencyStamp = "18f632cf-d2bb-4aa8-8267-03d86fd45c48",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = new Guid("3733b194-d12e-4f3d-b1b3-30811da21f20"),
                            ConcurrencyStamp = "9ceadadb-3249-4fac-9f1c-efe8cc34b870",
                            Name = "Store",
                            NormalizedName = "STORE"
                        });
                });

            modelBuilder.Entity("Project.Data.Entities.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Project.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("19b1856d-44a9-401b-b188-563b8b48ee21"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b41ccc6f-dd05-4b02-b978-caaf7c85f4ef",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Superadmin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEArF52GCQ11KYcLuElOWg2lTCYE2lmazZwQhF6PIovAf/uu2viR+ZgBMSBKicjXJsw==",
                            PhoneNumber = "+905055055050",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ab295e87-ad08-4d29-a004-ae5b17317792",
                            TwoFactorEnabled = false,
                            UserName = "superadmin@gmail.com"
                        },
                        new
                        {
                            Id = new Guid("361936ea-8c5d-410e-8a5a-7f3f5c302d87"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ff921a2f-9132-4b66-a9b5-ffc784f742be",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEJ2XO1Pb6O+TYW+jCGwqcdW9av0mqp5J5KRDmISNVpEVSSJbBTztOffJN3IoH2+bOQ==",
                            PhoneNumber = "+905055055050",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bc8d8eaf-d4bd-4a94-97cb-d4dd1aa5d3db",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("19b1856d-44a9-401b-b188-563b8b48ee21"),
                            RoleId = new Guid("30144a78-fa5f-45d8-9dbc-eb595667add7")
                        },
                        new
                        {
                            UserId = new Guid("361936ea-8c5d-410e-8a5a-7f3f5c302d87"),
                            RoleId = new Guid("70d5392a-4f59-41c5-9dd0-1e026005f59c")
                        });
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Project.Data.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CityCode = "01",
                            CityName = "ADANA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CityCode = "02",
                            CityName = "ADIYAMAN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d401961f-0146-497d-b0f7-9412c25073d4"),
                            CityCode = "03",
                            CityName = "AFYON",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8f2ae84e-eb94-4494-939b-d3114e397e54"),
                            CityCode = "04",
                            CityName = "AĞRI",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("90b18e75-8150-4d7e-badb-40c3b98448bb"),
                            CityCode = "05",
                            CityName = "AMASYA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("119f19bd-9bcc-43e8-b79b-298d2512b8c8"),
                            CityCode = "06",
                            CityName = "ANKARA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2861d7aa-7771-42fa-b25e-04c32114e36d"),
                            CityCode = "07",
                            CityName = "ANTALYA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("70ec3cbf-76e3-4309-a13b-59a6bf4fe9a5"),
                            CityCode = "08",
                            CityName = "ARTVİN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6aad2e1b-f444-40b5-bd37-69f701f4dc4c"),
                            CityCode = "09",
                            CityName = "AYDIN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("db4e9dfe-b804-4f8c-b389-e1eef2f18ca1"),
                            CityCode = "10",
                            CityName = "BALIKESİR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("f16beb91-4df1-4e2e-a8a2-37272de1e438"),
                            CityCode = "11",
                            CityName = "BİLECİK",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4f28cb7d-f2d7-4ff1-a240-2cc59b011e61"),
                            CityCode = "12",
                            CityName = "BİNGÖL",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("14e32643-0447-4f96-b063-988b3907af7d"),
                            CityCode = "13",
                            CityName = "BİTLİS",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e8dcb038-b7e7-484f-9454-58dcf35f8725"),
                            CityCode = "14",
                            CityName = "BOLU",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("91e1a2e4-9933-490e-9367-e72eb178544f"),
                            CityCode = "15",
                            CityName = "BURDUR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("58fc1bdc-f107-4974-948a-c71752d91233"),
                            CityCode = "16",
                            CityName = "BURSA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("73a7dbe0-967b-4afb-8549-31a5048aa4a1"),
                            CityCode = "17",
                            CityName = "ÇANAKKALE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6c666dcd-0922-4b06-a77c-0c319b8d6d9d"),
                            CityCode = "18",
                            CityName = "ÇANKIRI",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("63085967-e8cb-4c07-aef3-593023d1c4a7"),
                            CityCode = "19",
                            CityName = "ÇORUM",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("000da6cd-6cf6-4ac8-8ba6-3987a365d6d6"),
                            CityCode = "20",
                            CityName = "DENİZLİ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("81744f52-0934-484e-ae12-1d393b7bc854"),
                            CityCode = "21",
                            CityName = "DİYARBAKIR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("90758c2e-1707-40e7-813f-bbc056f41e46"),
                            CityCode = "22",
                            CityName = "EDİRNE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5c4841e1-45c7-4412-bcd8-5c1c9075d534"),
                            CityCode = "23",
                            CityName = "ELAZIĞ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("00ad0fe7-69b5-44d9-a9b7-55be3abb5c1d"),
                            CityCode = "24",
                            CityName = "ERZİNCAN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("73761197-85fc-48b0-8caf-a3848c81331d"),
                            CityCode = "25",
                            CityName = "ERZURUM",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2181e33c-af94-4462-9b9e-8ea81d9ae65f"),
                            CityCode = "26",
                            CityName = "ESKİŞEHİR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("43d3f152-6faf-451c-b2c2-0c0a2c6b0844"),
                            CityCode = "27",
                            CityName = "GAZİANTEP",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3a0e5300-4339-4367-8179-05a161e61d46"),
                            CityCode = "28",
                            CityName = "GİRESUN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d91084e0-a6cf-40ae-86ba-14ba6a44c0fb"),
                            CityCode = "29",
                            CityName = "GÜMÜŞHANE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("207c8a7a-9bbd-49fa-8b6c-024e422e85be"),
                            CityCode = "30",
                            CityName = "HAKKARİ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("a98b32f6-ed0e-4b47-b7b6-d83e183046f8"),
                            CityCode = "31",
                            CityName = "HATAY",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("bdcfac30-a93b-4577-9fe5-71821abb6446"),
                            CityCode = "32",
                            CityName = "ISPARTA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("87f6b3c9-e7ea-452a-93b2-85af25db1cb1"),
                            CityCode = "33",
                            CityName = "İÇEL",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e985dae1-25b1-482a-9cde-3a737447a305"),
                            CityCode = "34",
                            CityName = "İSTANBUL",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("76ae7192-2b2b-44ac-bd2b-6defd9557d1d"),
                            CityCode = "35",
                            CityName = "İZMİR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d76ed0d1-f072-42e9-899b-384501da5b25"),
                            CityCode = "36",
                            CityName = "KARS",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d31e6f41-babc-433c-b094-bf134168f453"),
                            CityCode = "37",
                            CityName = "KASTAMONU",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2d1d94df-4a1a-425b-ab96-6cadb1740c56"),
                            CityCode = "38",
                            CityName = "KAYSERİ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0b39dfca-59b8-4f31-86d3-4ae9ca4f2b9b"),
                            CityCode = "39",
                            CityName = "KIRKLARELİ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("843cb178-724c-4356-b722-0aec3d3e3719"),
                            CityCode = "40",
                            CityName = "KIRŞEHİR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("852ae3fa-ed4b-4966-bc7c-3d81373f8826"),
                            CityCode = "41",
                            CityName = "KOCAELİ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("f499428c-bdd2-47f8-9e4a-87590b660103"),
                            CityCode = "42",
                            CityName = "KONYA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ebf47fcc-1959-4efd-82e6-b89e383d71a1"),
                            CityCode = "43",
                            CityName = "KÜTAHYA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("7f8fcbf4-9998-4696-b369-01122d3777bc"),
                            CityCode = "44",
                            CityName = "MALATYA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("7c4768e3-feb2-4ba2-990b-bf28cc62c1e8"),
                            CityCode = "45",
                            CityName = "MANİSA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4cf278e0-83b7-42d4-b372-c1205488f89b"),
                            CityCode = "46",
                            CityName = "KAHRAMANMARAŞ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4492dccd-aa16-4368-9b8a-7b4a9de724f4"),
                            CityCode = "47",
                            CityName = "MARDİN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ac4e3529-393b-4284-a96e-442eef95d2a1"),
                            CityCode = "48",
                            CityName = "MUĞLA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("19886235-a21e-451c-b5c7-9dd156d10cb6"),
                            CityCode = "49",
                            CityName = "MUŞ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c3f47f5f-b620-4d48-a077-c1b84b270bae"),
                            CityCode = "50",
                            CityName = "NEVŞEHİR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9d5c729b-c36e-4a84-9601-80905ad21c7a"),
                            CityCode = "51",
                            CityName = "NİĞDE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b1c2f1e9-795e-46c0-becb-aee29b9d99db"),
                            CityCode = "52",
                            CityName = "ORDU",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("db637ede-2b00-4ed7-b7a9-8449cbe3a78c"),
                            CityCode = "53",
                            CityName = "RİZE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5b778b1a-8d0b-421e-8f5b-2d7fc20a154d"),
                            CityCode = "54",
                            CityName = "SAKARYA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("58c9ebdf-12ee-41ca-a48d-db1af2bf5fae"),
                            CityCode = "55",
                            CityName = "SAMSUN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("bc58e55f-e0ce-4ed1-ab96-3c9abccc8055"),
                            CityCode = "56",
                            CityName = "SİİRT",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4a2fdffc-026d-48d0-86e8-5a8f29f91288"),
                            CityCode = "57",
                            CityName = "SİNOP",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("38a110da-dbfc-44df-bae3-8112a1bb1afe"),
                            CityCode = "58",
                            CityName = "SİVAS",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("560ff615-1edc-4e27-b15f-1a19dcf30dc1"),
                            CityCode = "59",
                            CityName = "TEKİRDAĞ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("08e7f6c4-945b-4df7-a665-add2e7a4a618"),
                            CityCode = "60",
                            CityName = "TOKAT",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("cd98d7b2-a710-4536-9b62-d74f7fb054d0"),
                            CityCode = "61",
                            CityName = "TRABZON",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("879925d2-c58f-49db-ba0d-682217e75b84"),
                            CityCode = "62",
                            CityName = "TUNCELİ",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3468b7e2-31e2-4db4-bdf6-ef7236f5278e"),
                            CityCode = "63",
                            CityName = "ŞANLIURFA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9661652c-5eee-4437-8c61-898683990f32"),
                            CityCode = "64",
                            CityName = "UŞAK",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4883900e-8c4f-4973-9462-37ee7161c581"),
                            CityCode = "65",
                            CityName = "VAN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d698d997-f0b0-4994-bd84-6a18d142f878"),
                            CityCode = "66",
                            CityName = "YOZGAT",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("97553ab3-5570-4c21-86e2-54e2c7ed8c7d"),
                            CityCode = "67",
                            CityName = "ZONGULDAK",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4445d161-57da-4678-848e-545d22bf49b7"),
                            CityCode = "68",
                            CityName = "AKSARAY",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("83d8f9f0-6881-4fd0-b357-1479a773e420"),
                            CityCode = "69",
                            CityName = "BAYBURT",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8670c127-a7be-4dae-a841-3e75d018c300"),
                            CityCode = "70",
                            CityName = "KARAMAN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("8b2f5d1f-9e23-48e2-bb8e-8ad30f0aca8f"),
                            CityCode = "71",
                            CityName = "KIRIKKALE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("a6783483-6c0c-4345-8482-f064756fd5e7"),
                            CityCode = "72",
                            CityName = "BATMAN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("28315c53-3efe-4fa5-b770-b67ae030d801"),
                            CityCode = "73",
                            CityName = "ŞIRNAK",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("ae800eac-ec3f-4e99-a86c-fc2328630293"),
                            CityCode = "74",
                            CityName = "BARTIN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("076b7bd6-14bc-4fb0-a267-b54250050b15"),
                            CityCode = "75",
                            CityName = "ARDAHAN",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("bf65cd65-b63d-4f90-96d6-21f060daf156"),
                            CityCode = "76",
                            CityName = "IĞDIR",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0a989240-4ad1-4b86-848b-c9f1c1f05e5e"),
                            CityCode = "77",
                            CityName = "YALOVA",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("62ccccf2-0c45-4cb0-8d83-73d378960d43"),
                            CityCode = "78",
                            CityName = "KARABÜK",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("24dbcfcc-f0f6-47c7-8126-2bd503f0795a"),
                            CityCode = "79",
                            CityName = "KİLİS",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("60e48429-8d51-4ffc-9397-9331b8d4d0fa"),
                            CityCode = "80",
                            CityName = "OSMANİYE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("e045d15d-a4d2-460a-8fab-6cdb782d11f5"),
                            CityCode = "81",
                            CityName = "DÜZCE",
                            CountryId = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Project.Data.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6506be3d-63b1-4707-8e20-1f01a2a63d86"),
                            CountryCode = "TR",
                            CountryName = "Türkiye",
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Project.Data.Entities.District", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistrictCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Districts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("512809fd-7b48-4a50-a7b7-9de728f2e5e6"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "ALADAĞ",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("9a0fdb95-f2df-4853-93cb-8d72793f555d"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "CEYHAN",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0e0063c2-0621-41b7-9206-0348cc2f552d"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "ÇUKUROVA",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b8d91d22-4fc3-4017-ba4e-af2db2e2e59b"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "FEKE",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("a0170e47-e380-4ab1-a0cf-bffb821a1951"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "İMAMOĞLU",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("6d38973e-425f-4525-bc8f-ffcb2dfe3fb2"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "KARAİSALI",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b0f22411-44f9-46d1-89a8-4a7b89430857"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "KARATAŞ",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5a57ca40-f365-4130-aaab-baee0e0c282a"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "KOZAN",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("afeea71e-d61d-46ce-b794-d24a3e336840"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "POZANTI",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("98798a7d-6f73-497e-8e8c-9ae9da5d7fae"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "SAİMBEYLİ",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("35c1305d-1443-48c2-b772-179985746711"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "SARIÇAM",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("11ec0101-d748-481f-9da1-1de154209694"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "SEYHAN",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("613e812d-5604-4b13-bb86-72f21fef94ae"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "TUFANBEYLİ",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("7a295a66-d91f-4a60-ba71-95262641dd4d"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "YUMURTALIK",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4833927c-be8c-4533-8001-f8f5fac28889"),
                            CityId = new Guid("743531d8-793e-42fb-8ff0-b6bb128370c9"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "YÜREĞİR",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("81bd3fd6-9baf-46d2-a264-c811431a6976"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "BESNİ",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("eb33397d-ff11-4965-9d91-05f455b6fd19"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "ÇELİKHAN",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d74ad0d8-ca87-4f8d-8a82-b159ee2ee72f"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "GERGER",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2083a543-f6df-4c6f-8d01-864f9424d465"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "GÖLBAŞI",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("0f63c895-215d-4efe-b121-55fb832c9df3"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "KAHTA",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4876bb81-5125-49bc-9070-fa10f3376bf4"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "MERKEZ",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5095eaeb-5b51-4d2b-aea8-33355bf0b42f"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "SAMSAT",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("f581c226-f011-4b1b-8cbb-46ec224a2f1c"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "SİNCİK",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d3dd068c-1a08-40e2-bf0b-e2196c19025e"),
                            CityId = new Guid("d2aff33b-0e7f-4032-8759-317fcc628775"),
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DistrictCode = "",
                            DistrictName = "TUT",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Project.Data.Entities.FavouriteStore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("FavouriteStores");
                });

            modelBuilder.Entity("Project.Data.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Project.Data.Entities.LiveChat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("LiveChats");
                });

            modelBuilder.Entity("Project.Data.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("LiveChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LiveChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Project.Data.Entities.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CrewSize")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnAir")
                        .HasColumnType("bit");

                    b.Property<TimeSpan?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<string>("StoreDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreSlogan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Project.Data.Entities.StoreComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("UserId");

                    b.ToTable("StoreComments");
                });

            modelBuilder.Entity("Project.Data.Entities.StoreImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreImages");
                });

            modelBuilder.Entity("Project.Data.Entities.Address", b =>
                {
                    b.HasOne("Project.Data.Entities.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.Country", "Country")
                        .WithMany("Addresses")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.District", "District")
                        .WithMany("Addresses")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.Store", "Store")
                        .WithOne("Address")
                        .HasForeignKey("Project.Data.Entities.Address", "StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("District");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Project.Data.Entities.AppRoleClaim", b =>
                {
                    b.HasOne("Project.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserClaim", b =>
                {
                    b.HasOne("Project.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserLogin", b =>
                {
                    b.HasOne("Project.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserRole", b =>
                {
                    b.HasOne("Project.Data.Entities.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Data.Entities.AppUserToken", b =>
                {
                    b.HasOne("Project.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Data.Entities.City", b =>
                {
                    b.HasOne("Project.Data.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Project.Data.Entities.District", b =>
                {
                    b.HasOne("Project.Data.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Project.Data.Entities.FavouriteStore", b =>
                {
                    b.HasOne("Project.Data.Entities.Store", "Store")
                        .WithMany("FavouriteStores")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.AppUser", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Data.Entities.LiveChat", b =>
                {
                    b.HasOne("Project.Data.Entities.Store", "Store")
                        .WithMany("LiveChats")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.AppUser", "User")
                        .WithMany("LiveChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Data.Entities.Message", b =>
                {
                    b.HasOne("Project.Data.Entities.LiveChat", "LiveChat")
                        .WithMany("Messages")
                        .HasForeignKey("LiveChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.AppUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LiveChat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Project.Data.Entities.Store", b =>
                {
                    b.HasOne("Project.Data.Entities.AppUser", "User")
                        .WithOne("Store")
                        .HasForeignKey("Project.Data.Entities.Store", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Data.Entities.StoreComment", b =>
                {
                    b.HasOne("Project.Data.Entities.Store", "Store")
                        .WithMany("Comments")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.AppUser", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Data.Entities.StoreImage", b =>
                {
                    b.HasOne("Project.Data.Entities.Image", "Image")
                        .WithMany("StoreImages")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Data.Entities.Store", "Store")
                        .WithMany("Images")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Project.Data.Entities.AppUser", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Favorites");

                    b.Navigation("LiveChats");

                    b.Navigation("Store")
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Data.Entities.City", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Project.Data.Entities.Country", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Project.Data.Entities.District", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("Project.Data.Entities.Image", b =>
                {
                    b.Navigation("StoreImages");
                });

            modelBuilder.Entity("Project.Data.Entities.LiveChat", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Project.Data.Entities.Store", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Comments");

                    b.Navigation("FavouriteStores");

                    b.Navigation("Images");

                    b.Navigation("LiveChats");
                });
#pragma warning restore 612, 618
        }
    }
}
